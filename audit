// Enviar correo normal
        async function handleEmailSubmit(e) {
            e.preventDefault();
            
            try {
                const emailData = {
                    to: document.getElementById('emailTo').value,
                    subject: document.getElementById('emailSubject').value,
                    message: document.getElementById('emailMessage').value
                };

                if (!emailjsInitialized) {
                    // Usar cliente local como respaldo
                    showAlert('info', 'üìß EmailJS no disponible, usando cliente local...');
                    sendEmailLocal(emailData);
                    return;
                }

                showAlert('info', 'üì§ Enviando correo via EmailJS...');

                const emailjsService = window.emailjs || emailjs;
                
                const templateParams = {
                    from_name: appState.currentUser?.name || 'Sistema Auditor√≠a GT',
                    from_email: appState.currentUser?.email || 'sistema@auditoria.gt',
                    to_email: emailData.to,
                    subject: emailData.subject,
                    message: emailData.message,
                    html_content: emailData.message.replace(/\n/g, '<br>').replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>'),
                    reply_to: appState.currentUser?.email || 'sistema@auditoria.gt'
                };

                const response = await emailjsService.send(
                    'service_b3bbf3j',
                    'template_48fcljb',
                    templateParams,
                    'oRv0UzebO2bmLUcBi'
                );

                if (response.status === 200) {
                    appState.emails.push({
                        to: emailData.to,
                        subject: emailData.subject,
                        date: new Date().toLocaleDateString(),
                        time: new Date().toLocaleTimeString(),
                        status: 'sent',
                        method: 'emailjs'
                    });
                    
                    updateEmailHistory();
                    showAlert('success', `‚úÖ Correo enviado exitosamente a ${emailData.to} via EmailJS`);
                    document.getElementById('emailForm').reset();
                } else {
                    throw new Error(`HTTP ${response.status}: ${response.text || 'Error desconocido'}`);
                }

            } catch (error) {
                console.error('Error enviando correo:', error);
                showAlert('error', '‚ùå Error con EmailJS, intentando con cliente local...');
                
                // Respaldo con cliente local
                const emailData = {
                    to: document.getElementById('emailTo').value,
                    subject: document.getElementById('emailSubject').value,
                    message: document.getElementById('emailMessage').value
                };
                sendEmailLocal(emailData);
            }
        }

        // Enviar correo con cliente local
        function sendEmailLocal(emailData) {
            try {
                const subject = encodeURIComponent(emailData.subject);
                const body = encodeURIComponent(emailData.message);
                const mailtoLink = `mailto:${emailData.to}?subject=${subject}&body=${body}`;

                window.open(mailtoLink, '_blank');
                
                // Registrar en historial
                appState.emails.push({
                    to: emailData.to,
                    subject: emailData.subject,
                    date: new Date().toLocaleDateString(),
                    time: new Date().toLocaleTimeString(),
                    status: 'sent',
                    method: 'local'
                });
                
                updateEmailHistory();
                showAlert('success', `üìß Cliente local abierto para ${emailData.to}. Haz clic en "Enviar" en tu aplicaci√≥n.`);
                document.getElementById('emailForm').reset();
                
            } catch (error) {
                showAlert('error', '‚ùå Error abriendo cliente local: ' + error.message);
            }
        }

        // Cargar plantillas
        function loadTemplate(type) {
            const currentUser = appState.currentUser?.name || 'Usuario del Sistema';
            
            const templates = {
                audit: {
                    subject: 'Solicitud de Auditor√≠a de Inventarios - ' + new Date().getFullYear(),
                    message: `Estimado/a profesional,

Espero que este mensaje le encuentre bien. Me dirijo a usted para solicitar una auditor√≠a de inventarios para nuestra empresa.

**DETALLES DE LA SOLICITUD:**
‚Ä¢ Empresa: [Nombre de la empresa]
‚Ä¢ Tipo de auditor√≠a: Inventarios y VNR (Valor Neto de Realizaci√≥n)
‚Ä¢ Per√≠odo a auditar: ${new Date().getFullYear()}
‚Ä¢ Ubicaci√≥n: Guatemala

**SERVICIOS REQUERIDOS:**
‚úì Verificaci√≥n f√≠sica de inventarios
‚úì C√°lculo de Valor Neto de Realizaci√≥n (VNR)  
‚úì Valuaci√≥n seg√∫n normas guatemaltecas
‚úì Informe de auditor√≠a certificado

Agradecemos su pronta respuesta con disponibilidad y cotizaci√≥n.

Saludos cordiales,
${currentUser}
Sistema de Auditor√≠a Guatemala üá¨üáπ

üìû Tel√©fono: [Completar]
üìß Email: ${appState.currentUser?.email || '[Completar]'}`
                },
                report: {
                    subject: 'üìä Reporte de Inventario Actualizado - ' + new Date().toLocaleDateString(),
                    message: `Estimado/a,

Adjunto el reporte actualizado de nuestro inventario correspondiente a ${new Date().toLocaleDateString()}.

**RESUMEN EJECUTIVO:**
üì¶ Total de productos registrados: [Cantidad]
üí∞ Valor total del inventario: Q. [Monto]
üìà VNR total calculado: Q. [Monto]
üìä Productos con mayor rotaci√≥n: [Lista]

**PRODUCTOS DESTACADOS:**
‚Ä¢ [Producto 1] - Cantidad: [X] - Valor: Q. [X]
‚Ä¢ [Producto 2] - Cantidad: [X] - Valor: Q. [X]  
‚Ä¢ [Producto 3] - Cantidad: [X] - Valor: Q. [X]

El reporte completo con an√°lisis detallado est√° disponible para descarga desde nuestro sistema.

Por favor, revise la informaci√≥n y no dude en contactarnos para cualquier aclaraci√≥n o consulta adicional.

Atentamente,
${currentUser}
Departamento de Auditor√≠a
Sistema de Auditor√≠a Guatemala üá¨üáπ`
                },
                reminder: {
                    subject: '‚è∞ Recordatorio - Auditor√≠a Programada',
                    message: `Estimado/a,

Este es un recordatorio amigable sobre la auditor√≠a programada.

**DETALLES DE LA CITA:**
üìÖ Fecha: [Completar fecha]
üïê Hora: [Completar hora]
üìç Ubicaci√≥n: [Completar direcci√≥n]
üë§ Contacto: ${currentUser}
üìû Tel√©fono: [Completar]

**DOCUMENTACI√ìN REQUERIDA:**
‚úì Inventario f√≠sico actualizado
‚úì Facturas de compra recientes
‚úì Registros contables de inventarios
‚úì Acceso a almacenes y bodegas
‚úì Personal de inventarios disponible

**AGENDA TENTATIVA:**
‚Ä¢ 09:00 - Reuni√≥n inicial y revisi√≥n de documentos
‚Ä¢ 10:00 - Inspecci√≥n f√≠sica de inventarios
‚Ä¢ 12:00 - Almuerzo (opcional)
‚Ä¢ 14:00 - An√°lisis y c√°lculos VNR
‚Ä¢ 16:00 - Reuni√≥n de cierre y siguiente pasos

Por favor, confirme su asistencia respondiendo a este correo.

Saludos cordiales,
${currentUser}
Sistema de Auditor√≠a Guatemala üá¨üáπ`
                }
            };

            const template = templates[type];
            if (template) {
                document.getElementById('emailSubject').value = template.subject;
                document.getElementById('emailMessage').value = template.message;
                showAlert('info', `üìß Plantilla "${type}" cargada exitosamente. Puede modificarla seg√∫n sus necesidades.`);
            }
        }

        // Actualizar historial de emails
        function updateEmailHistory() {
            const historyDiv = document.getElementById('emailHistory');
            let html = '';

            if (appState.emails.length === 0) {
                html = '<p>No hay correos enviados a√∫n. ¬°Env√≠a tu primer correo!</p>';
            } else {
                appState.emails.forEach((email, index) => {
                    const methodIcon = email.method === 'emailjs' ? 'üìß' : 'üíª';
                    const methodText = email.method === 'emailjs' ? 'EmailJS' : 'Cliente Local';
                    
                    html += `
                        <div style="background: #f8f9fa; border: 1px solid #e9ecef; padding: 15px; border-radius: 8px; margin-bottom: 10px; border-left: 4px solid #28a745;">
                            <div style="display: flex; justify-content: space-between; align-items: start; flex-wrap: wrap;">
                                <div style="flex: 1; min-width: 250px;">
                                    <h4 style="margin: 0 0 8px 0; color: #2c3e50;">üìß ${email.subject}</h4>
                                    <p style="margin: 4px 0; color: #495057;"><strong>Para:</strong> ${email.to}</p>
                                    <p style="margin: 4px 0; color: #6c757d; font-size: 12px;">${email.date} ‚Ä¢ ${email.time}</p>
                                </div>
                                <div style="text-align: right;">
                                    <span style="background: #d4edda; color: #155724; padding: 3px 8px; border-radius: 12px; font-size: 11px; font-weight: bold;">
                                        ‚úÖ ENVIADO
                                    </span>
                                    <p style="margin: 8px 0 0 0; font-size: 11px; color: #6c757d;">
                                        ${methodIcon} v√≠a ${methodText}
                                    </p>
                                </div>
                            </div>
                        </div>
                    `;
                });
            }

            historyDiv.innerHTML = html;
        }

        // Mostrar alertas
        function showAlert(type, message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type}`;
            alertDiv.innerHTML = message;
            alertDiv.style.fontSize = '14px';
            alertDiv.style.lineHeight = '1.5';
            
            const activeTab = document.querySelector('.tab-content.active');
            if (activeTab) {
                activeTab.insertBefore(alertDiv, activeTab.firstChild);
                
                // Auto-scroll hacia arriba para ver la alerta
                activeTab.scrollTop = 0;
                
                // Remover alerta despu√©s de 8 segundos (m√°s tiempo para leer)
                setTimeout(() => {
                    if (alertDiv.parentNode) {
                        alertDiv.style.opacity = '0';
                        alertDiv.style.transform = 'translateY(-10px)';
                        setTimeout(() => {
                            if (alertDiv.parentNode) {
                                alertDiv.parentNode.removeChild(alertDiv);
                            }
                        }, 300);
                    }
                }, 8000);
            }
        }

        // Funci√≥n de diagn√≥stico para EmailJS
        function diagnoseEmailJS() {
            console.log('üîç DIAGN√ìSTICO EMAILJS:');
            console.log('- window.emailjs disponible:', typeof window.emailjs !== 'undefined');
            console.log('- emailjs global disponible:', typeof emailjs !== 'undefined');
            console.log('- emailjsLoaded:', emailjsLoaded);
            console.log('- emailjsInitialized:', emailjsInitialized);
            
            if (typeof window.emailjs !== 'undefined') {
                console.log('- EmailJS versi√≥n:', window.emailjs.version || 'no disponible');
            }
            
            // Mostrar en alerta tambi√©n
            const status = `DIAGN√ìSTICO EMAILJS:
            
‚Ä¢ window.emailjs: ${typeof window.emailjs !== 'undefined' ? '‚úÖ Disponible' : '‚ùå No disponible'}
‚Ä¢ emailjs global: ${typeof emailjs !== 'undefined' ? '‚úÖ Disponible' : '‚ùå No disponible'}  
‚Ä¢ Estado cargado: ${emailjsLoaded ? '‚úÖ S√≠' : '‚ùå No'}
‚Ä¢ Estado inicializado: ${emailjsInitialized ? '‚úÖ S√≠' : '‚ùå No'}

${emailjsInitialized ? 'SISTEMA LISTO PARA ENVIAR' : 'USANDO CLIENTE LOCAL COMO RESPALDO'}`;
            
            alert(status);
        }

        // Estad√≠sticas del sistema
        function showStats() {
            const totalEmails = appState.emails.length;
            const emailjsCount = appState.emails.filter(e => e.method === 'emailjs').length;
            const localCount = appState.emails.filter(e => e.method === 'local').length;
            
            const stats = `üìä ESTAD√çSTICAS DEL SISTEMA

üìß CORREOS ENVIADOS:
‚Ä¢ Total: ${totalEmails}
‚Ä¢ Via EmailJS: ${emailjsCount}
‚Ä¢ Via Cliente Local: ${localCount}

üîß ESTADO T√âCNICO:
‚Ä¢ EmailJS: ${emailjsInitialized ? '‚úÖ Operativo' : '‚ùå No disponible'}
‚Ä¢ Cliente Local: ‚úÖ Siempre disponible
‚Ä¢ Usuario actual: ${appState.currentUser?.name || 'No logueado'}

üéØ FUNCIONALIDADES:
‚Ä¢ Env√≠o directo con EmailJS
‚Ä¢ Respaldo con cliente local
‚Ä¢ Plantillas profesionales
‚Ä¢ Historial completo`;

            alert(stats);
        }

        // Funci√≥n para exportar historial de correos
        function exportEmailHistory() {
            if (appState.emails.length === 0) {
                showAlert('info', 'No hay correos en el historial para exportar');
                return;
            }

            let exportData = `HISTORIAL DE CORREOS - Sistema de Auditor√≠a Guatemala
Generado el: ${new Date().toLocaleString('es-GT')}
Usuario: ${appState.currentUser?.name || 'Sistema'}

Total de correos enviados: ${appState.emails.length}

DETALLE:
========

`;

            appState.emails.forEach((email, index) => {
                exportData += `${index + 1}. ${email.subject}
   Para: ${email.to}
   Fecha: ${email.date} ${email.time}
   M√©todo: ${email.method === 'emailjs' ? 'EmailJS (directo)' : 'Cliente Local'}
   Estado: Enviado

`;
            });

            // Crear archivo para descarga
            const blob = new Blob([exportData], { type: 'text/plain' });
            const url = window.URL.createObjectURL(blob);
            const a = document.createElement('a');
            a.href = url;
            a.download = `historial_correos_${new Date().toISOString().split('T')[0]}.txt`;
            document.body.appendChild(a);
            a.click();
            document.body.removeChild(a);
            window.URL.revokeObjectURL(url);

            showAlert('success', `üì• Historial exportado: ${appState.emails.length} correos guardados en archivo`);
        }

        // Agregar botones de utilidades al HTML (se ejecuta despu√©s del DOM)
        function addUtilityButtons() {
            setTimeout(() => {
                const correosTab = document.getElementById('correos');
                if (correosTab) {
                    const utilityCard = document.createElement('div');
                    utilityCard.className = 'card';
                    utilityCard.innerHTML = `
                        <h3>üîß Herramientas del Sistema</h3>
                        <div style="display: flex; flex-wrap: wrap; gap: 10px;">
                            <button class="btn btn-info" onclick="diagnoseEmailJS()">üîç Diagnosticar EmailJS</button>
                            <button class="btn btn-info" onclick="showStats()">üìä Ver Estad√≠sticas</button>
                            <button class="btn btn-success" onclick="exportEmailHistory()">üì• Exportar Historial</button>
                            <button class="btn btn-warning" onclick="retryEmailJS()">üîÑ Reintentar EmailJS</button>
                        </div>
                        <p style="margin-top: 15px; font-size: 12px; color: #6c757d;">
                            <strong>üí° Tip:</strong> Si EmailJS no funciona, el sistema autom√°ticamente usa tu cliente de correo local (Gmail, Outlook, etc.) como respaldo.
                        </p>
                    `;
                    correosTab.appendChild(utilityCard);
                }
            }, 2000);
        }

        // Ejecutar utilidades cuando la aplicaci√≥n est√© lista
        document.addEventListener('DOMContentLoaded', function() {
            addUtilityButtons();
        });

        console.log('üá¨üáπ Sistema de Auditor√≠a Guatemala - Versi√≥n mejorada con diagn√≥sticos');
        console.log('üìß EmailJS configurado con m√∫ltiples m√©todos de carga');
        console.log('üîÑ Sistema de respaldo con cliente local activado');
    </script>
</body>
</html><!DOCTYPE html>
<html lang="es">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Sistema de Auditor√≠a - Guatemala</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }

        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 20px;
        }

        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .header h1 {
            color: #2c3e50;
            text-align: center;
            margin-bottom: 10px;
            font-size: 2.5em;
        }

        .nav-tabs {
            display: flex;
            background: rgba(255, 255, 255, 0.9);
            border-radius: 12px;
            padding: 5px;
            margin-bottom: 20px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
            flex-wrap: wrap;
            gap: 5px;
        }

        .tab-button {
            flex: 1;
            min-width: 120px;
            background: transparent;
            border: none;
            padding: 15px 20px;
            border-radius: 8px;
            cursor: pointer;
            transition: all 0.3s ease;
            font-weight: 600;
            font-size: 14px;
        }

        .tab-button:hover {
            background: rgba(103, 126, 234, 0.1);
            transform: translateY(-2px);
        }

        .tab-button.active {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            box-shadow: 0 4px 15px rgba(103, 126, 234, 0.3);
        }

        .tab-content {
            display: none;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .tab-content.active {
            display: block;
        }

        .form-group {
            margin-bottom: 20px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
        }

        .form-group input, .form-group select, .form-group textarea {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 14px;
            transition: all 0.3s ease;
            background: rgba(255, 255, 255, 0.9);
        }

        .form-group input:focus, .form-group select:focus, .form-group textarea:focus {
            outline: none;
            border-color: #667eea;
            box-shadow: 0 0 0 3px rgba(103, 126, 234, 0.1);
        }

        .btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 600;
            transition: all 0.3s ease;
            margin-right: 10px;
            margin-bottom: 10px;
        }

        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(103, 126, 234, 0.3);
        }

        .btn-success {
            background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
        }

        .btn-danger {
            background: linear-gradient(135deg, #dc3545 0%, #fd7e14 100%);
        }

        .btn-warning {
            background: linear-gradient(135deg, #ffc107 0%, #fd7e14 100%);
            color: #212529;
        }

        .grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }

        .card {
            background: rgba(255, 255, 255, 0.9);
            border-radius: 12px;
            padding: 20px;
            box-shadow: 0 4px 20px rgba(0, 0, 0, 0.1);
        }

        .card h3 {
            color: #2c3e50;
            margin-bottom: 15px;
            font-size: 1.3em;
        }

        .alert {
            padding: 12px 20px;
            border-radius: 8px;
            margin-bottom: 20px;
            border-left: 4px solid;
        }

        .alert-success {
            background: rgba(40, 167, 69, 0.1);
            border-color: #28a745;
            color: #155724;
        }

        .alert-error {
            background: rgba(220, 53, 69, 0.1);
            border-color: #dc3545;
            color: #721c24;
        }

        .alert-info {
            background: rgba(23, 162, 184, 0.1);
            border-color: #17a2b8;
            color: #0c5460;
        }

        .login-form {
            max-width: 400px;
            margin: 100px auto;
            background: rgba(255, 255, 255, 0.95);
            padding: 40px;
            border-radius: 15px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }

        .logo {
            text-align: center;
            margin-bottom: 30px;
        }

        .logo h2 {
            color: #667eea;
            font-size: 2em;
            margin-bottom: 10px;
        }

        .hidden {
            display: none !important;
        }

        .email-status {
            background: rgba(40, 167, 69, 0.1);
            border: 2px solid #28a745;
            border-radius: 8px;
            padding: 15px;
            margin: 15px 0;
            text-align: center;
        }

        .email-status h4 {
            color: #28a745;
            margin-bottom: 10px;
        }

        @media (max-width: 768px) {
            .nav-tabs {
                flex-direction: column;
            }
            
            .grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <!-- Login Screen -->
    <div id="loginScreen" class="login-form">
        <div class="logo">
            <h2>üá¨üáπ AuditPro</h2>
            <p>Sistema de Auditor√≠a - Guatemala</p>
        </div>
        <form id="loginForm">
            <div class="form-group">
                <label>Correo Electr√≥nico</label>
                <input type="email" id="loginEmail" required>
            </div>
            <div class="form-group">
                <label>Contrase√±a</label>
                <input type="password" id="loginPassword" required>
            </div>
            <div class="form-group">
                <label>Tipo de Usuario</label>
                <select id="userType" required>
                    <option value="">Seleccionar...</option>
                    <option value="admin">Administrador</option>
                    <option value="auditor">Auditor</option>
                    <option value="client">Cliente</option>
                </select>
            </div>
            <button type="submit" class="btn" style="width: 100%;">Iniciar Sesi√≥n</button>
        </form>
    </div>

    <!-- Main Application -->
    <div id="mainApp" class="hidden">
        <div class="container">
            <div class="header">
                <h1>üá¨üáπ Sistema de Auditor√≠a</h1>
                <p>Plataforma Integral de Auditor√≠a para Empresas Guatemaltecas</p>
                <div style="text-align: right; margin-top: 15px;">
                    <span id="currentUser" style="margin-right: 20px; font-weight: bold;"></span>
                    <button class="btn btn-danger" onclick="logout()">Cerrar Sesi√≥n</button>
                </div>
            </div>

            <div class="nav-tabs" id="navTabs">
                <button class="tab-button active" onclick="switchTab('correos')">üìß Correos</button>
                <button class="tab-button" onclick="switchTab('inventarios')">üì¶ Inventarios</button>
                <button class="tab-button" onclick="switchTab('usuarios')">üë• Usuarios</button>
                <button class="tab-button" onclick="switchTab('archivos')">üìÅ Archivos</button>
            </div>

            <!-- Correos Tab -->
            <div id="correos" class="tab-content active">
                <h2>üìß Centro de Correos con EmailJS</h2>
                
                <!-- Estado de EmailJS -->
                <div class="email-status">
                    <h4>üéâ ¬°EmailJS CONFIGURADO Y LISTO!</h4>
                    <p><strong>‚úÖ Public Key:</strong> oRv0UzebO2bmLUcBi</p>
                    <p><strong>‚úÖ Service ID:</strong> service_b3bbf3j</p>
                    <p><strong>‚úÖ Template ID:</strong> template_48fcljb</p>
                    <p>Ya puedes enviar correos directamente desde la aplicaci√≥n</p>
                    <button class="btn btn-success" onclick="sendTestEmail()">üß™ Enviar Email de Prueba</button>
                </div>

                <!-- Formulario de Correos -->
                <div class="card">
                    <h3>Enviar Correo</h3>
                    <form id="emailForm">
                        <div class="grid">
                            <div class="form-group">
                                <label>Para (Destinatario)</label>
                                <input type="email" id="emailTo" placeholder="destinatario@gmail.com" required>
                            </div>
                            <div class="form-group">
                                <label>Asunto</label>
                                <input type="text" id="emailSubject" placeholder="Asunto del correo" required>
                            </div>
                        </div>
                        <div class="form-group">
                            <label>Mensaje</label>
                            <textarea id="emailMessage" rows="8" placeholder="Escriba su mensaje aqu√≠..." required></textarea>
                        </div>
                        <button type="submit" class="btn">üìß Enviar Correo</button>
                    </form>
                </div>

                <!-- Plantillas -->
                <div class="card">
                    <h3>üìß Plantillas de Correo</h3>
                    <button class="btn btn-warning" onclick="loadTemplate('audit')">üìã Solicitud de Auditor√≠a</button>
                    <button class="btn btn-warning" onclick="loadTemplate('report')">üìä Reporte de Inventario</button>
                    <button class="btn btn-warning" onclick="loadTemplate('reminder')">‚è∞ Recordatorio</button>
                </div>

                <!-- Historial -->
                <div class="card">
                    <h3>üì¨ Historial de Correos</h3>
                    <div id="emailHistory">
                        <p>No hay correos enviados a√∫n</p>
                    </div>
                </div>
            </div>

            <!-- Inventarios Tab -->
            <div id="inventarios" class="tab-content">
                <h2>üì¶ Gesti√≥n de Inventarios</h2>
                <div class="card">
                    <h3>Agregar Producto</h3>
                    <form id="inventoryForm">
                        <div class="grid">
                            <div class="form-group">
                                <label>C√≥digo del Producto</label>
                                <input type="text" id="productCode" required>
                            </div>
                            <div class="form-group">
                                <label>Nombre del Producto</label>
                                <input type="text" id="productName" required>
                            </div>
                        </div>
                        <div class="grid">
                            <div class="form-group">
                                <label>Cantidad</label>
                                <input type="number" id="productQuantity" required>
                            </div>
                            <div class="form-group">
                                <label>Costo Unitario (Q.)</label>
                                <input type="number" step="0.01" id="unitCost" required>
                            </div>
                        </div>
                        <button type="submit" class="btn">Agregar Producto</button>
                    </form>
                </div>
            </div>

            <!-- Usuarios Tab -->
            <div id="usuarios" class="tab-content">
                <h2>üë• Gesti√≥n de Usuarios</h2>
                <div class="card">
                    <h3>Crear Usuario</h3>
                    <form id="userForm">
                        <div class="grid">
                            <div class="form-group">
                                <label>Nombre Completo</label>
                                <input type="text" id="userName" required>
                            </div>
                            <div class="form-group">
                                <label>Correo Electr√≥nico</label>
                                <input type="email" id="userEmail" required>
                            </div>
                        </div>
                        <button type="submit" class="btn">Crear Usuario</button>
                    </form>
                </div>
            </div>

            <!-- Archivos Tab -->
            <div id="archivos" class="tab-content">
                <h2>üìÅ Gesti√≥n de Archivos</h2>
                <div class="card">
                    <h3>Subir Archivos</h3>
                    <div style="border: 2px dashed #667eea; padding: 40px; text-align: center; border-radius: 8px; background: rgba(103, 126, 234, 0.05);">
                        <h4>üìÅ Arrastra archivos aqu√≠ o haz clic para seleccionar</h4>
                        <p>Formatos: .xlsx, .pdf, .png, .docx (m√°x. 200MB)</p>
                        <input type="file" id="fileInput" multiple accept=".xlsx,.pdf,.png,.docx" style="margin-top: 15px;">
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- EmailJS Library con carga m√∫ltiple -->
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/@emailjs/browser@4/dist/email.min.js"></script>
    <script type="text/javascript" src="https://cdn.emailjs.com/dist/email.min.js"></script>
    
    <script>
        // Estado global
        let appState = {
            currentUser: null,
            emails: []
        };

        // Configuraci√≥n EmailJS con m√∫ltiples intentos
        let emailjsLoaded = false;
        let emailjsInitialized = false;

        // Funci√≥n para verificar y cargar EmailJS
        function initEmailJS() {
            console.log('üîÑ Intentando cargar EmailJS...');
            
            // M√©todo 1: Verificar window.emailjs
            if (typeof window.emailjs !== 'undefined') {
                emailjsLoaded = true;
                console.log('‚úÖ EmailJS encontrado en window.emailjs');
                try {
                    window.emailjs.init("oRv0UzebO2bmLUcBi");
                    emailjsInitialized = true;
                    updateEmailStatus('success', 'EmailJS cargado y configurado correctamente');
                    return true;
                } catch (error) {
                    console.error('Error inicializando EmailJS:', error);
                }
            }
            
            // M√©todo 2: Verificar emailjs global
            if (typeof emailjs !== 'undefined') {
                emailjsLoaded = true;
                console.log('‚úÖ EmailJS encontrado globalmente');
                try {
                    emailjs.init("oRv0UzebO2bmLUcBi");
                    emailjsInitialized = true;
                    updateEmailStatus('success', 'EmailJS cargado y configurado correctamente');
                    return true;
                } catch (error) {
                    console.error('Error inicializando EmailJS:', error);
                }
            }

            // M√©todo 3: Cargar din√°micamente
            console.log('‚ö†Ô∏è EmailJS no encontrado, intentando carga din√°mica...');
            loadEmailJSDynamically();
            return false;
        }

        // Cargar EmailJS din√°micamente
        function loadEmailJSDynamically() {
            const script = document.createElement('script');
            script.src = 'https://cdn.jsdelivr.net/npm/@emailjs/browser@4/dist/email.min.js';
            script.onload = function() {
                console.log('üì¶ EmailJS cargado din√°micamente');
                setTimeout(() => {
                    if (typeof emailjs !== 'undefined') {
                        emailjsLoaded = true;
                        emailjs.init("oRv0UzebO2bmLUcBi");
                        emailjsInitialized = true;
                        updateEmailStatus('success', 'EmailJS cargado din√°micamente y configurado');
                    }
                }, 500);
            };
            script.onerror = function() {
                console.error('‚ùå Error cargando EmailJS din√°micamente');
                updateEmailStatus('error', 'Error cargando EmailJS. Verifique conexi√≥n a internet.');
            };
            document.head.appendChild(script);
        }

        // Actualizar estado visual de EmailJS
        function updateEmailStatus(type, message) {
            const statusDiv = document.querySelector('.email-status');
            if (!statusDiv) return;

            if (type === 'success') {
                statusDiv.innerHTML = `
                    <h4>üéâ ¬°EmailJS CONFIGURADO Y LISTO!</h4>
                    <p><strong>‚úÖ Public Key:</strong> oRv0UzebO2bmLUcBi</p>
                    <p><strong>‚úÖ Service ID:</strong> service_b3bbf3j</p>
                    <p><strong>‚úÖ Template ID:</strong> template_48fcljb</p>
                    <p>${message}</p>
                    <button class="btn btn-success" onclick="sendTestEmail()">üß™ Enviar Email de Prueba</button>
                `;
                statusDiv.style.background = 'rgba(40, 167, 69, 0.1)';
                statusDiv.style.borderColor = '#28a745';
            } else if (type === 'error') {
                statusDiv.innerHTML = `
                    <h4>‚ö†Ô∏è EmailJS No Disponible</h4>
                    <p><strong>‚ùå Estado:</strong> ${message}</p>
                    <p><strong>üîÑ Alternativa:</strong> Usando cliente local (Gmail/Outlook)</p>
                    <button class="btn btn-warning" onclick="retryEmailJS()">üîÑ Reintentar Cargar EmailJS</button>
                    <button class="btn btn-success" onclick="sendTestEmailLocal()">üìß Probar Cliente Local</button>
                `;
                statusDiv.style.background = 'rgba(255, 193, 7, 0.1)';
                statusDiv.style.borderColor = '#ffc107';
            } else {
                statusDiv.innerHTML = `
                    <h4>üîÑ Cargando EmailJS...</h4>
                    <p>${message}</p>
                `;
                statusDiv.style.background = 'rgba(23, 162, 184, 0.1)';
                statusDiv.style.borderColor = '#17a2b8';
            }
        }

        // Reintentar carga de EmailJS
        function retryEmailJS() {
            updateEmailStatus('loading', 'Reintentando cargar EmailJS...');
            setTimeout(() => {
                initEmailJS();
            }, 1000);
        }

        // Inicializaci√≥n con m√∫ltiples intentos
        document.addEventListener('DOMContentLoaded', function() {
            document.getElementById('loginForm').addEventListener('submit', handleLogin);
            document.getElementById('emailForm').addEventListener('submit', handleEmailSubmit);
            
            // Intentar cargar EmailJS inmediatamente
            updateEmailStatus('loading', 'Verificando disponibilidad de EmailJS...');
            
            // Primer intento inmediato
            setTimeout(() => {
                if (!initEmailJS()) {
                    // Segundo intento despu√©s de 2 segundos
                    setTimeout(() => {
                        if (!initEmailJS()) {
                            // Tercer intento despu√©s de 5 segundos
                            setTimeout(() => {
                                if (!initEmailJS()) {
                                    updateEmailStatus('error', 'No se pudo cargar EmailJS despu√©s de m√∫ltiples intentos');
                                }
                            }, 5000);
                        }
                    }, 2000);
                }
            }, 1000);
            
            console.log('‚úÖ Aplicaci√≥n inicializada');
        });

        // Login
        function handleLogin(e) {
            e.preventDefault();
            const email = document.getElementById('loginEmail').value;
            const userType = document.getElementById('userType').value;

            if (email && userType) {
                appState.currentUser = {
                    email: email,
                    type: userType,
                    name: email.split('@')[0]
                };

                document.getElementById('loginScreen').classList.add('hidden');
                document.getElementById('mainApp').classList.remove('hidden');
                document.getElementById('currentUser').textContent = `${appState.currentUser.name} (${userType})`;
                
                showAlert('success', '¬°Bienvenido al Sistema de Auditor√≠a!');
            }
        }

        // Logout
        function logout() {
            document.getElementById('loginScreen').classList.remove('hidden');
            document.getElementById('mainApp').classList.add('hidden');
            document.getElementById('loginForm').reset();
        }

        // Cambiar tabs
        function switchTab(tabName) {
            document.querySelectorAll('.tab-content').forEach(tab => {
                tab.classList.remove('active');
            });
            document.querySelectorAll('.tab-button').forEach(btn => {
                btn.classList.remove('active');
            });
            
            document.getElementById(tabName).classList.add('active');
            event.target.classList.add('active');
        }

        // Enviar email de prueba con EmailJS
        async function sendTestEmail() {
            try {
                if (!emailjsInitialized) {
                    showAlert('error', '‚ùå EmailJS no est√° inicializado');
                    return;
                }

                const testEmail = prompt('üìß ¬øA qu√© email enviar la prueba?', appState.currentUser?.email || 'tu-email@gmail.com');
                if (!testEmail) return;

                showAlert('info', 'üîÑ Enviando correo de prueba via EmailJS...');

                // Usar el objeto emailjs correcto
                const emailjsService = window.emailjs || emailjs;
                
                const templateParams = {
                    from_name: 'Sistema de Auditor√≠a Guatemala - PRUEBA',
                    from_email: appState.currentUser?.email || 'sistema@auditoria.gt',
                    to_email: testEmail,
                    subject: 'üß™ Prueba EmailJS - ¬°FUNCIONA!',
                    message: `¬°Felicidades! Tu EmailJS est√° funcionando perfectamente.

‚úÖ Configuraci√≥n correcta
‚úÖ Servicio conectado  
‚úÖ Plantilla operativa
‚úÖ Sistema listo para usar

¬°Ya puedes enviar correos directamente desde la aplicaci√≥n!

Saludos,
Sistema de Auditor√≠a Guatemala üá¨üáπ`,
                    html_content: `
                        <div style="padding: 25px; background: #f8f9fa; border-radius: 10px; border: 2px solid #28a745; font-family: Arial, sans-serif;">
                            <h2 style="color: #28a745; text-align: center; margin-bottom: 20px;">üéâ ¬°PRUEBA EXITOSA!</h2>
                            
                            <div style="background: white; padding: 20px; border-radius: 8px; margin: 20px 0;">
                                <h3 style="color: #2c3e50; margin-bottom: 15px;">‚úÖ EmailJS funcionando perfectamente</h3>
                                <p style="color: #495057; line-height: 1.6;">Este correo confirma que tu configuraci√≥n de EmailJS est√° operativa y lista para enviar correos profesionales.</p>
                                
                                <ul style="color: #495057; line-height: 1.8; margin: 15px 0;">
                                    <li><strong>‚úÖ Credenciales v√°lidas:</strong> Public Key y Service ID correctos</li>
                                    <li><strong>‚úÖ Plantilla operativa:</strong> Template ID funcionando</li>
                                    <li><strong>‚úÖ Servicio conectado:</strong> Cuenta de correo autorizada</li>
                                    <li><strong>‚úÖ Sistema listo:</strong> 200 emails gratis por mes</li>
                                </ul>
                            </div>
                            
                            <div style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 20px; border-radius: 8px; text-align: center;">
                                <h3 style="margin: 0 0 10px 0;">üá¨üáπ Sistema de Auditor√≠a Guatemala</h3>
                                <p style="margin: 0;">Correos profesionales listos para usar</p>
                            </div>
                            
                            <p style="text-align: center; margin-top: 20px; color: #6c757d; font-size: 14px;">
                                <strong>¬°Tu sistema est√° 100% operativo para enviar correos!</strong>
                            </p>
                        </div>
                    `,
                    reply_to: appState.currentUser?.email || 'sistema@auditoria.gt'
                };

                console.log('üì§ Enviando correo con par√°metros:', templateParams);

                const response = await emailjsService.send(
                    'service_b3bbf3j',
                    'template_48fcljb', 
                    templateParams,
                    'oRv0UzebO2bmLUcBi'
                );

                console.log('üìß Respuesta EmailJS:', response);

                if (response.status === 200) {
                    showAlert('success', `üéâ ¬°PRUEBA EXITOSA! Correo enviado a ${testEmail}. Revisa tu bandeja en 1-2 minutos.`);
                } else {
                    throw new Error(`HTTP ${response.status}: ${response.text || 'Error desconocido'}`);
                }

            } catch (error) {
                console.error('‚ùå Error enviando correo:', error);
                let errorMsg = '‚ùå Error enviando correo: ';
                
                if (error.message.includes('402')) {
                    errorMsg += 'L√≠mite de emails excedido (200/mes)';
                } else if (error.message.includes('400')) {
                    errorMsg += 'Error de configuraci√≥n - Verifica Service ID y Template ID';
                } else if (error.message.includes('401')) {
                    errorMsg += 'Error de autorizaci√≥n - Verifica Public Key';
                } else {
                    errorMsg += error.message;
                }
                
                showAlert('error', errorMsg);
            }
        }

        // Probar con cliente local
        function sendTestEmailLocal() {
            try {
                const testEmail = appState.currentUser?.email || 'tu-email@gmail.com';
                const subject = encodeURIComponent('üß™ Prueba Cliente Local - Sistema Auditor√≠a GT');
                const body = encodeURIComponent(`¬°Hola!

Este es un correo de prueba del Sistema de Auditor√≠a Guatemala usando tu cliente local (Gmail, Outlook, etc.).

Si puedes ver este correo, significa que el m√©todo de respaldo est√° funcionando correctamente.

Saludos,
Sistema de Auditor√≠a Guatemala üá¨üáπ`);

                const mailtoLink = `mailto:${testEmail}?subject=${subject}&body=${body}`;
                window.open(mailtoLink, '_blank');
                
                showAlert('success', 'üìß Cliente de correo local abierto. Haz clic en "Enviar" en tu aplicaci√≥n de correo.');
                
            } catch (error) {
                showAlert('error', '‚ùå Error abriendo cliente local: ' + error.message);
            }
        }

        // Enviar correo normal
        async function handleEmailSubmit(e) {
            e.preventDefault();
            
            try {
                if (!emailjsLoaded) {
                    showAlert('error', '‚ùå EmailJS no disponible');
                    return;
                }

                const emailData = {
                    to: document.getElementById('emailTo').value,
                    subject: document.getElementById('emailSubject').value,
                    message: document.getElementById('emailMessage').value
                };

                showAlert('info', 'üì§ Enviando correo...');

                const templateParams = {
                    from_name: appState.currentUser?.name || 'Sistema Auditor√≠a GT',
                    from_email: appState.currentUser?.email || 'sistema@auditoria.gt',
                    to_email: emailData.to,
                    subject: emailData.subject,
                    message: emailData.message,
                    html_content: emailData.message.replace(/\n/g, '<br>'),
                    reply_to: appState.currentUser?.email || 'sistema@auditoria.gt'
                };

                const response = await emailjs.send(
                    'service_b3bbf3j',
                    'template_48fcljb',
                    templateParams,
                    'oRv0UzebO2bmLUcBi'
                );

                if (response.status === 200) {
                    appState.emails.push({
                        to: emailData.to,
                        subject: emailData.subject,
                        date: new Date().toLocaleDateString(),
                        status: 'sent'
                    });
                    
                    updateEmailHistory();
                    showAlert('success', `‚úÖ Correo enviado exitosamente a ${emailData.to}`);
                    document.getElementById('emailForm').reset();
                } else {
                    throw new Error('Error en el env√≠o');
                }

            } catch (error) {
                console.error('Error:', error);
                showAlert('error', '‚ùå Error enviando correo: ' + error.message);
            }
        }

        // Cargar plantillas
        function loadTemplate(type) {
            const templates = {
                audit: {
                    subject: 'Solicitud de Auditor√≠a de Inventarios - 2025',
                    message: `Estimado/a,

Esperamos que este mensaje le encuentre bien. Nos dirigimos a usted para solicitar una auditor√≠a de inventarios para nuestra empresa.

DETALLES DE LA SOLICITUD:
‚Ä¢ Empresa: [Nombre de la empresa]
‚Ä¢ Tipo de auditor√≠a: Inventarios y VNR
‚Ä¢ Per√≠odo: 2025
‚Ä¢ Ubicaci√≥n: Guatemala

Agradecemos su pronta respuesta.

Saludos cordiales,
Sistema de Auditor√≠a Guatemala üá¨üáπ`
                },
                report: {
                    subject: 'üìä Reporte de Inventario - ' + new Date().toLocaleDateString(),
                    message: `Estimado/a,

Adjunto el reporte actualizado de inventario.

RESUMEN EJECUTIVO:
üì¶ Total de productos: [Cantidad]
üí∞ Valor total: Q. [Monto]
üìà VNR calculado: Q. [Monto]

Por favor, revise la informaci√≥n.

Atentamente,
Departamento de Auditor√≠a`
                },
                reminder: {
                    subject: '‚è∞ Recordatorio - Auditor√≠a Programada',
                    message: `Estimado/a,

Recordatorio sobre la auditor√≠a programada.

DETALLES:
üìÖ Fecha: [Completar fecha]
üïê Hora: [Completar hora]  
üìç Ubicaci√≥n: [Completar direcci√≥n]

Por favor, confirme su asistencia.

Saludos,
Sistema de Auditor√≠a Guatemala`
                }
            };

            const template = templates[type];
            if (template) {
                document.getElementById('emailSubject').value = template.subject;
                document.getElementById('emailMessage').value = template.message;
                showAlert('info', `üìß Plantilla "${type}" cargada`);
            }
        }

        // Actualizar historial de emails
        function updateEmailHistory() {
            const historyDiv = document.getElementById('emailHistory');
            let html = '';

            appState.emails.forEach(email => {
                html += `
                    <div style="background: #f8f9fa; padding: 15px; border-radius: 8px; margin-bottom: 10px;">
                        <h4>üìß ${email.subject}</h4>
                        <p><strong>Para:</strong> ${email.to}</p>
                        <p><strong>Fecha:</strong> ${email.date}</p>
                        <span style="background: #d4edda; color: #155724; padding: 3px 8px; border-radius: 12px; font-size: 12px;">‚úÖ Enviado</span>
                    </div>
                `;
            });

            historyDiv.innerHTML = html || '<p>No hay correos enviados a√∫n</p>';
        }

        // Mostrar alertas
        function showAlert(type, message) {
            const alertDiv = document.createElement('div');
            alertDiv.className = `alert alert-${type}`;
            alertDiv.textContent = message;
            
            const activeTab = document.querySelector('.tab-content.active');
            if (activeTab) {
                activeTab.insertBefore(alertDiv, activeTab.firstChild);
                
                setTimeout(() => {
                    if (alertDiv.parentNode) {
                        alertDiv.parentNode.removeChild(alertDiv);
                    }
                }, 5000);
            }
        }

        console.log('üá¨üáπ Sistema de Auditor√≠a Guatemala - Listo');
    </script>
</body>
</html>
